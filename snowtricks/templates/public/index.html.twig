{% extends 'layout/base.html.twig' %}

{% block title %}{{ title }}{% endblock %}

{% block body %}
	<style xmlns:x-transition="http://www.w3.org/1999/xhtml">
		.example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
		.example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
	</style>
	<main x-data="interact()" x-init="init()" class="grid grid-rows-col grid-cols-12">
		<section class="col-span-12">
			<div class="w-full h-screen website-img-banner">
				<div class="slogan ml-48 pl-4 pt-12 text-blue-50 border-l-8">
					<h1 class="text-6xl font-black">Snowtricks</h1>
					<ul class="text-2xl font-bold">
						<li class="class">Speak</li>
						<li class="class">Apprend</li>
						<li class="class">Ride</li>
						<li class="class">Partage</li>
					</ul>
				</div>
			</div>
		</section>
		<section class="col-start-2 col-span-10 mt-8 mx-auto ">
			<div class="-mt-28">
				<h1 class="text-9xl font-snowtricks italic text-indigo-900 font-black tracking-tight">LES TRICKS</h1>
				<p>Ces tricks sont publiés par la communotée, si vous voyez une correction à apporter connectez-vous et contribuez au partage de connaissance !</p>
			</div>
			<div class="mt-8">
				<div id="trick-card-container" class="flex flex-wrap content-start justify-start mt-8">
{#					 Tricks appear here !#}
				</div>
			</div>
		</section>
	</main>

		<script>
			const container = document.getElementById('trick-card-container');
			const loader = document.getElementById('loader');
			let target;
            let nbSteps = 4.0;
            let prevRatio = 0.0;
            window.nb_iteration = 0;
            window.tricks = [];

            function interact(){
                return {
                    'visible': true,

	                init() {
						fetchTricks();
	                },

                    setVisible(event) {
                        if (event.target.tagName == 'DIV') {
                            var real_target = event.target.firstChild;
                        } else if (event.target.tagName == 'A') {
                            var real_target = event.target;
                        } else if (event.target.tagName == 'I') {
                            var real_target = event.target.parentElement;
                        }
                        real_target.classList.remove('opacity-0')
                    },

                    unsetVisible(event) {
                        if (event.target.tagName == 'DIV') {
                            var real_target = event.target.firstChild;
                        } else if (event.target.tagName == 'A') {
                            var real_target = event.target;
                        } else if (event.target.tagName == 'I') {
                            var real_target = event.target.parentElement;
                        }
                        if (!real_target.classList.contains('opacity-0')) {
                            real_target.classList.add('opacity-0')
                        }
                    },
                }
            }

            window.addEventListener("load", function(event) {
                createObserver();
            }, false);

            function createObserver() {
                let options = {
                    root: null,
                    rootMargin: "0px",
                    threshold: 0.01
                    // threshold: buildThresholdList()
                };

                window.observer = new IntersectionObserver(handleIntersect, options);
                window.observer.observe(container);
            }

            function buildThresholdList() {
                let thresholds = [];

                for (let i=1.0; i<=nbSteps; i++) {
                    let ratio = i/nbSteps;
                    thresholds.push(ratio);
                }

                thresholds.push(0);
                return thresholds;
            }

            function handleIntersect(entries) {
                entries.forEach(function(entry) {
                    if (entry.intersectionRatio > prevRatio) {
                        fetchTricks();
                        // entry.target.style.backgroundColor = increasingColor.replace("ratio", entry.intersectionRatio);
                    } else {
                        // entry.target.style.backgroundColor = decreasingColor.replace("ratio", entry.intersectionRatio);
                    }
                    prevRatio = entry.intersectionRatio;
                });
            }

            function fetchTricks() {

                fetch('http://snowtricks.local/feed/' + window.nb_iteration + '/tricks')
                    .then(response => response.json())
	                // .then(() => showLoader())
                    .then(function(data) {

	                    let to_display = data.tricks.filter(function (trick) {
	                        if ( !window.tricks.includes(JSON.stringify(trick)) ) {
                                window.tricks.push(JSON.stringify(trick));

                                return true;
	                        }
	                    });
	                    let old_last_child = container.lastElementChild;
	                    window.observer.unobserve(old_last_child ? old_last_child : container);
                        to_display.map((x) => displayTrick(x, container));
                        let last_child = container.lastElementChild;
                        window.observer.observe(last_child);

                        // window.tricks.push(data.tricks);
                        window.nb_iteration ++;
                    });
	                // .then((to_display) => {return to_display;});

            }

            function displayTrick(current_trick, container) {
                const div = document.createElement('div');
                div.setAttribute('class','trick-card flex-none mx-8 mb-8 rounded-t-md h-52 w-72 shadow-sm '+
                    'transition duration-200 ease-out bg-gray-50 hover:bg-gray-200 hover:shadow-xl transform hover:-translate-y-1 hover:scale-110 hover:rotate-1');
                div.innerHTML = '<div class="tricks_img rounded-t-md h-40 w-72"' +
                'x-on:mouseover="setVisible($event);" x-on:mouseout="unsetVisible($event);" ' +
                'style="background-image:url(' + current_trick.preview_path + ')">' +
                '<a href="trick/'+ current_trick.id+'" class="opacity-0" data-a="'+ current_trick.id +'">' +
                '<i id="edit-ico-'+ current_trick.id + ' "' +
                    'class="far fa-edit fa-2x float-right mr-4 mt-4 text-gray-50" data-i="'+ current_trick.id +'">' +
                '</i></a>'+
                '</div>'+
                '<div class="flex justify-between pt-2 px-2 mb-24">'+
                '<h3 class="mx-2 text-2xl font-black font-mono">' + current_trick.title + '</h3>'+
                '<p class="">n° ' + current_trick.id + '</p>'+
                '</div>';
                container = document.getElementById('trick-card-container');
                container.appendChild(div)
            }
		</script>
{% endblock %}
